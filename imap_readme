Быда задача наполнить базу документами. Решил для простоты наполнить текстами писем из наших же почтовых ящиков.

В этой директории лежит прототип для решения этой задачи. Прототип, потому что использует SQLAlchemy, а не django ORM :-( Надеюсь поможете переделать это для Django ORM.

Как это попробовать:
1. Установить sqlalchemy, flask.
2. Прописать в файл imap_credentials.py логин и пасс от имап-ящика:
	imap_username = 'superuser@gmail.com'
	imap_password = 'supersecretpass'
3. Запустить imap_flask.py
4. Подключиться браузером к http://127.0.0.1/5000
5. Следовать инструкциям на сайтике.

*ВАЖНО: Тестировал только на gmail. Если там не включена опция "разрешить доступ несекьюрным приложениям", то в первый раз не получится получить доступ из скриптика к почте. Надо будет разрешить imap. Это легко будет сделать с помощью панических писем от гмэйда :-)

На сайте последовательно выдаются ссылки для создания базы, записи туда информации об email-аккаунте, выкачиванию и помещению писем в базу, отображению содержимого писем из БД.

Установлено ограничение на общее кол-во писем выкачиваемых, чтобы сильно не распухла база. Берутся только последние 10.

Детали:
1. imap.py:fetch_emails - функция, выкачивающая письма с имап-ящика
2. imap.db.py:Mail - класс таблицы с письмами
3. imap.db.py:Mail_account - класс таблицы с почтовыми аккаунтами
4. imap.db.py:create_structure - функция создания структуры БД
5. imap_populate.py:create_account - функцияя заполнения таблицы с почтовыми аккаунтами
6. imap_populate.py:get_mails - функция помещения писем в таблицу с письмами

Всё очень грязно и некрасиво, но работает :-)
